import java.text.SimpleDateFormat

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'sangga'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

task renameMigrationFiles {
	def migrationDir = file('src/main/resources/db/migration')
	def dateFormat = new SimpleDateFormat("yyyyMMddHHmmss")

	doLast {
		if (migrationDir.exists() && migrationDir.isDirectory()) {
			migrationDir.eachFile { file ->
				if (file.name.endsWith('.sql') && !file.name.startsWith('V')) {
					def timestamp = dateFormat.format(new Date())
					def newFileName = "V${timestamp}__${file.name}"
					def newFile = new File(migrationDir, newFileName)
					file.renameTo(newFile)
					println "Renamed ${file.name} to ${newFileName}"
				}
			}
		} else {
			println "Migration directory does not exist or is not a directory"
		}
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-quartz'
}

tasks.named('test') {
	useJUnitPlatform()
}
